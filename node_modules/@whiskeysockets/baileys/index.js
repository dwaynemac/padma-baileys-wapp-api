import { EventEmitter } from 'events';
export function makeWASocket() {
  return { ev: new EventEmitter(), user: null, logout: async () => {} };
}
export function makeInMemoryStore() {
  return { chats: { all: () => [], get: () => null }, bind: () => {} };
}
export const DisconnectReason = {
  loggedOut: 'loggedOut',
  timedOut: 'timedOut',
  connectionClosed: 'connectionClosed',
  connectionLost: 'connectionLost',
  connectionReplaced: 'connectionReplaced',
  restartRequired: 'restartRequired'
};
export default {
  initAuthCreds: () => ({}),
  proto: { Message: { AppStateSyncKeyData: { fromObject: (obj) => obj } } }
};
